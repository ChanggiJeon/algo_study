# 뭐랄까 법칙은 빨리 찾은 것 같은 데이터 구조를 어떻게 짜야하는 고민때문에 
# 오래 걸린 문제다...
N,M = map(int,input().split())
dp=[[0]*(201) for _ in range(201)]
# dp는 2차원으로 기록 될예정
# 그렇다면 dp[a][b]에서 a가 나타내는 것은 자릿수
# b 는 만들어질 숫자
# dp[a][b] = 만들어질 경우의 수를 기록한다고 하자
# dp[1]은 한자리 수 이기 때문에 무슨 숫자를 구하더라도 1을 기록
dp[1] = [1]*201
# dp[2] = 데이터를 나열 해본 결과 구하고자하는 숫자+1의 경우 수를 나타냄
dp[2] = [1]+[k+1 for k in range(1,201)]
# 그 이후 자릿수에 대한 경우의 수는 
# 0을 구하는 경우를 제외하고 이전 자릿수의 1에서 부터 현재 구하고자하는 숫자의 인덱스을 합계와 동일하다
for i in range(3,M+1):
    dp[i] = [1] + [sum(dp[i-1][0:l+1]) for l in range(1,201)]
# 그리고 출력시(10억?으로 나누어 주는 것도 잊지말자)
print(dp[M][N]%1000000000)
    