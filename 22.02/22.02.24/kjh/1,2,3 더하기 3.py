# 1 - 1
# 2 - 1+1, 2
# 3 - 1+1+1(*1), 2+1(*2), 3
# 4 - 1+1+1+1(*1), 2+1+1(*3), 2+2(*1), 3+1(*2)
# 5 - 1+1+1+1+1(*1), 2+1+1+1(*4), 2+2+1(*3), 3+1+1(*3), 3+2(*2)
# 6 - 1+1+1+1+1+1(*1), 2+1+1+1+1(*5), 2+2+1+1(*6), 2+2+2(*1), 3+1+1+1(*4), 3+2+1(*6), 3+3(*1)
# 7 - 44(문제에 있음)

# [규칙 찾기]
# 1 2 4 7 13 24 44
# 1 2 3 6 11 20
# 각 증가값은 i-1번쨰 값에 (i-2번째값 + i-3번째값)을 더해준 값과 같음
# 따라서, 점화식은 DP[i] = DP[i-1] + DP[i-2] + DP[i-3]

# DP를 n의 범위만큼 미리 구해놔야 시간초과가 발생하지 않는다.
DP = [1, 2, 4]
for i in range(3, 1000000):
    DP.append((DP[i-1] + DP[i-2] + DP[i-3]) % 1000000009)

T = int(input())
for tc in range(T):
    n = int(input())
    print(DP[n-1])