# 규칙찾기
# 1 - 1
# 2 - 2

# 3
# 1+2
# 2+1
# 3

# 4
# 1+2+1, 1+3
# 3+1

# 5
# 1+3+1
# 2+1+2, 2+3
# 3+2

# 6
# 1+2+1+2, 1+2+3, 1+3+2
# 2+1+2+1, 2+3+1, 2+1+3
# 3+2+1, 3+1+2

# 7
# 1+2+1+3, 1+2+3+1, 1+3+2+1, 1+3+1+2, 1+2+1+2+1
# 2+1+3+1, 2+3+2
# 3+1+2+1, 3+1+3

# 위에서 규칙을 찾아보면 현재 숫자 i에서 1로 시작하는 경우의 수의 갯수는 i-1에서 1로시작하는 경우의 수를 제외한 경우의 수의 합과 같음
# ex) 6의 경우의 수는 1부터 3까지 시작하는 수에 따라 (3,3,2)임. 따라서 7에서 1로 시작하는 경우의 수는 6에서 1로 시작하는 경우의 수 첫번째 3을 제외한 나머지의 합과 같음(=3+2)
# 마찬가지로 i에서 2로 시작하는 경우의 수는 i-2에서 2로 시작하는 경우의 수를 제외한 나머지의 합임
# 3도 위와 같음
# 따라서 점화식은 DP[i] = ((DP[i-1][1] + DP[i-1][2]), (DP[i-2][0] + DP[i-2][2]), (DP[i-3][0] + DP[i-3][1]))

DP = [(1,0,0), (0,1,0), (1,1,1)]
for i in range(3, 100000):
    DP.append(((DP[i - 1][1] + DP[i - 1][2]) % 1000000009, (DP[i - 2][0] + DP[i - 2][2]) % 1000000009, (DP[i - 3][0] + DP[i - 3][1]) % 1000000009))

T = int(input())
for i in range(T):
    n = int(input())
    print(sum(DP[n-1]) % 1000000009)
